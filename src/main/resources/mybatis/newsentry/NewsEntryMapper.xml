<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.dontdrinkandroot.example.angularrestspringsecurity.dao.newsentry.NewsEntryMapper" >

  <resultMap id="BaseResultMap" type="net.dontdrinkandroot.example.angularrestspringsecurity.model.NewsEntry" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="page_views" property="pageViews" jdbcType="BIGINT" />
    <result column="up_votes" property="upVotes" jdbcType="BIGINT" />
    <result column="down_votes" property="downVotes" jdbcType="BIGINT" />
    <result column="weight" property="weight" jdbcType="BIGINT"/>
  </resultMap>
  
  <resultMap type="NewsEntryUser" id="newsEntryUserMap" extends="BaseResultMap">
    <!-- 配置话题信息 -->

    <!-- 配置映射的关联的用户信息 -->
    <!-- association用于映射关联查询单个对象的信息
        property：要将关联查询的用户信息映射到Orders中的哪个属性
        javaType：该属性的类型
     -->
    <association property="user" javaType="User">
<!--         <id column="id" property="id"/> -->
        <result column="name" property="name"/>
    </association>
  </resultMap>
  
  
  <sql id="Base_Column_List" >
    id, content, date, user_id, page_views, up_votes, down_votes
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from newsentry
    where id = #{id,jdbcType=BIGINT}
  </select>
  
   <!-- 一对一嵌套内接查询 -->
   <select id="findNewsEntryUserList" resultMap="newsEntryUserMap">
        SELECT 
          newsentry.*,
          user.name
        FROM
          newsentry,
          user 
        WHERE newsentry.user_id = user.id order by newsentry.date desc 
    </select>
    
    <select id="getNewsNum" resultType="java.lang.Integer">
        SELECT 
          COUNT(*) as total_num
        FROM
          newsentry,
          user 
        WHERE newsentry.user_id = user.id  
    </select>
    
    <select id="getNewsEntryList" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from newsentry order by date desc    
	</select>
	
    <!-- 分页数据 -->
	<select id="getNewsPageList" parameterType="Map" resultMap="newsEntryUserMap">
        SELECT 
          newsentry.*,
          user.name
        FROM
          newsentry,
          user 
        WHERE newsentry.user_id = user.id order by newsentry.weight desc, newsentry.date desc 
        limit
        #{pageIndex,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
    </select>
    
    <!-- 更新浏览量 -->
	<update id="updatePageViews" parameterType="java.lang.Long">
		update newsentry
		set page_views = page_views + 1 
		where id = #{id,jdbcType=BIGINT}
	</update>
	
	 <!-- 更新赞数-->
	<update id="updateUpVotes" parameterType="java.lang.Long">
		update newsentry
		set up_votes = up_votes + 1
		where id = #{id,jdbcType=BIGINT}
	</update>
	
	 <!-- 更新踩数-->
	<update id="updateDownVotes" parameterType="java.lang.Long">
		update newsentry
		set down_votes = down_votes + 1
		where id = #{id,jdbcType=BIGINT}
	</update>
    
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from newsentry
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="NewsEntry" >
    insert into newsentry (id, content, date, 
      user_id, page_views, up_votes, 
      down_votes)
    values (#{id,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP}, 
      #{userId,jdbcType=BIGINT}, #{pageViews,jdbcType=BIGINT}, #{upVotes,jdbcType=BIGINT}, 
      #{downVotes,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="NewsEntry" >
    insert into newsentry
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="pageViews != null" >
        page_views,
      </if>
      <if test="upVotes != null" >
        up_votes,
      </if>
      <if test="downVotes != null" >
        down_votes,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="pageViews != null" >
        #{pageViews,jdbcType=BIGINT},
      </if>
      <if test="upVotes != null" >
        #{upVotes,jdbcType=BIGINT},
      </if>
      <if test="downVotes != null" >
        #{downVotes,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="NewsEntry" >
    update newsentry
    <set >
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="pageViews != null" >
        page_views = #{pageViews,jdbcType=BIGINT},
      </if>
      <if test="upVotes != null" >
        up_votes = #{upVotes,jdbcType=BIGINT},
      </if>
      <if test="downVotes != null" >
        down_votes = #{downVotes,jdbcType=BIGINT},
      </if>
       <if test="weight != null" >
        weight = #{weight,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="NewsEntry" >
    update newsentry
    set content = #{content,jdbcType=VARCHAR},
      date = #{date,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=BIGINT},
      page_views = #{pageViews,jdbcType=BIGINT},
      up_votes = #{upVotes,jdbcType=BIGINT},
      down_votes = #{downVotes,jdbcType=BIGINT},
      weight = #{weight,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>