<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.dontdrinkandroot.example.angularrestspringsecurity.dao.newsentry.CommentsMapper" >
  <resultMap id="BaseResultMap" type="net.dontdrinkandroot.example.angularrestspringsecurity.model.Comments" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="up_votes" property="upVotes" jdbcType="BIGINT" />
    <result column="topic_id" property="topicId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="reply_id" property="replyId" jdbcType="BIGINT" />
  </resultMap>
  
  <resultMap id="commentResultMap" type="comments" extends="BaseResultMap">
  <association property="user" javaType="User">
<!--         <id column="id" property="id"/> -->
        <result column="name" property="name"/>
    </association>
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, comment, create_date, up_votes, topic_id, user_id, reply_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from comments
    where id = #{id,jdbcType=BIGINT}
  </select>

   <!-- 获取评论区，评论区优先按照点赞数升序排序，然后才按照时间排序 -->
	<select id="getCommentsList" parameterType="java.lang.Long" resultMap="commentResultMap">
		select
		comments.*,
		user.name
		from
		comments, user
		where
		comments.user_id = user.id and comments.topic_id = #{topicId,jdbcType=BIGINT}
		
		order by comments.up_votes DESC , comments.create_date DESC

	</select>
  
  <!-- 获取回复数 -->
  <select id="getReplyNum" parameterType="java.lang.Long" resultType="java.lang.Long">
    select 
    COUNT(*)
    from 
    comments com
    where
    com.reply_id = #{id,jdbcType=BIGINT}
  </select>
  
   <!-- 获取回复数 -->
  <select id="getCommentNum" parameterType="java.lang.Long" resultType="java.lang.Long">
    select 
    COUNT(*)
    from 
    comments com
    where
    com.topic_id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="getReplyList" parameterType="java.lang.Long" resultMap="commentResultMap">
    select
		comments.*,
		user.name
		from
		comments, user
		where
		comments.user_id = user.id and comments.reply_id = #{id,jdbcType=BIGINT}
		
		order by comments.up_votes DESC , comments.create_date DESC
  </select>
  
   <!-- 更新赞数-->
	<update id="updateUpVotes" parameterType="java.lang.Long">
		update comments
		set up_votes = up_votes + 1
		where id = #{id,jdbcType=BIGINT}
	</update>
	
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from comments
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="net.dontdrinkandroot.example.angularrestspringsecurity.model.Comments" >
    insert into comments (id, comment, create_date, 
      up_votes, topic_id, user_id, 
      reply_id)
    values (#{id,jdbcType=BIGINT}, #{comment,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{upVotes,jdbcType=BIGINT}, #{topicId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{replyId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="net.dontdrinkandroot.example.angularrestspringsecurity.model.Comments" >
    insert into comments
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="upVotes != null" >
        up_votes,
      </if>
      <if test="topicId != null" >
        topic_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="replyId != null" >
        reply_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="upVotes != null" >
        #{upVotes,jdbcType=BIGINT},
      </if>
      <if test="topicId != null" >
        #{topicId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="replyId != null" >
        #{replyId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="net.dontdrinkandroot.example.angularrestspringsecurity.model.Comments" >
    update comments
    <set >
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="upVotes != null" >
        up_votes = #{upVotes,jdbcType=BIGINT},
      </if>
      <if test="topicId != null" >
        topic_id = #{topicId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="replyId != null" >
        reply_id = #{replyId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.dontdrinkandroot.example.angularrestspringsecurity.model.Comments" >
    update comments
    set comment = #{comment,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      up_votes = #{upVotes,jdbcType=BIGINT},
      topic_id = #{topicId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      reply_id = #{replyId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>